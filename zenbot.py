# -*- coding: utf-8 -*-
"""ZenBot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CdudSYalAGmIuViJjldnHBk8N6Hr1_hX
"""

!pip -q install google-genai

import os
from google.colab import userdata
from google import genai
from google.genai import types



os.environ['GOOGLE_API_KEY'] = userdata.get('GOOGLE_API_KEY')

client = genai.Client()
model_flash = "gemini-2.0-flash"

chat_config = types.GenerateContentConfig(
    system_instruction="Você é o ZenBot, um assistente pessoal inteligente, empático e motivacional, "
        "focado em ajudar estudantes a cuidar da saúde emocional e a manter o foco nos estudos, "
        "cuidarem da saúde emocional e melhorarem seus hábitos de estudo. "
        "Responda sempre de forma sucinta, clara e acolhedora, com linguagem amigável e respeitosa.\n"
        "Sempre incentive o autocuidado, o equilíbrio entre estudo e descanso, e ofereça sugestões práticas para ansiedade, estresse, "
        "falta de foco e cansaço mental.\n"
        "Se o usuário pedir algo antiético, ilegal, perigoso, prejudicial ou ofensivo, recuse educadamente e explique que não pode ajudar com isso.\n"
        "Mantenha uma postura ética e responsável em todas as respostas.\n"
        "Nunca forneça diagnósticos médicos, legais ou financeiros. Em casos assim, oriente o usuário a procurar profissionais especializados.\n"
        "Use frases motivacionais leves e encorajadoras para apoiar o usuário em seus desafios diários."
)

chat = client.chats.create(model=model_flash, config=chat_config)


def check_in_emocional():
    estado = input("Como você está se sentindo hoje? ")
    prompt = (
        "Você é um assistente empático que conversa com um estudante. "
        "O usuário disse: '{}'. Responda com uma mensagem breve de acolhimento, "
        "e sugira uma técnica rápida para melhorar o humor, como respiração ou alongamento."
    ).format(estado)
    response = chat.send_message(prompt)
    print("\nZenBot:", response.text, "\n")


def modo_pomodoro():
    print("Iniciando ciclo Pomodoro: 25 minutos de foco, 5 minutos de pausa.")
    prompt = (
        "Você é um assistente que motiva o estudante a focar. "
        "Dê uma mensagem curta e motivacional para o início de um bloco de estudos Pomodoro."
    )
    response = chat.send_message(prompt)
    print("\nZenBot:", response.text)
    input("\nPressione Enter quando terminar o foco para iniciar a pausa...")
    prompt_pausa = (
        "Dê uma mensagem breve e positiva para a pausa de 5 minutos. Sugira que o estudante alongue ou respire profundamente."
    )
    response_pausa = chat.send_message(prompt_pausa)
    print("\nZenBot:", response_pausa.text, "\n")


def rotina_zen():
    print("Vou te ajudar a cuidar de você hoje! Vou lembrar algumas coisas importantes.")
    lembretes = [
        "Beba água regularmente.",
        "Faça pausas para alongar o corpo.",
        "Respire profundamente por um minuto.",
        "Durma pelo menos 7 horas hoje."
    ]
    for lembrete in lembretes:
        prompt = (
            f"Como um assistente empático, lembre o estudante do seguinte cuidado: '{lembrete}'. "
            "Faça isso de forma breve e amigável."
        )
        response = chat.send_message(prompt)
        print("\nZenBot:", response.text)
    print("Lembre-se: cuidar de você é parte do seu sucesso!\n")


def desabafo():
    desabafo_texto = input("Pode desabafar aqui, estou ouvindo: ")
    prompt = (
        "Você é um assistente empático que escuta desabafos. "
        "O usuário disse: '{}'. Responda com acolhimento e uma mensagem breve que transmita esperança e suporte."
    ).format(desabafo_texto)
    response = chat.send_message(prompt)
    print("\nZenBot:", response.text, "\n")


def menu():
    while True:
        print("=== ZenBot ===")
        print("1 - Check-in emocional")
        print("2 - Modo foco no estudo")
        print("3 - Rotina Zen")
        print("4 - Desabafo")
        print("5 - Sair")
        opcao = input("Escolha uma opção: ")

        if opcao == "1":
            check_in_emocional()
        elif opcao == "2":
            modo_pomodoro()
        elif opcao == "3":
            rotina_zen()
        elif opcao == "4":
            desabafo()
        elif opcao == "5":
            print("Até logo! Cuide-se e bons estudos!")
            break
        else:
            print("Opção inválida. Tente novamente.\n")


menu()